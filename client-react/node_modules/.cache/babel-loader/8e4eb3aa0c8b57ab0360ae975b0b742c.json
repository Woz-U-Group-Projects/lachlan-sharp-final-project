{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lachl\\\\Desktop\\\\Group Project\\\\team-compiling-crusaders\\\\client-react\\\\src\\\\components\\\\Task.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport '../task.min.css';\n\nclass Task extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getData = () => {\n      // Java Spring Boot uses port 8080\n      //let url = \"http://localhost:8080/tasks\";\n      // C# dotnetcore uses port 5000\n      //let url = \"http://localhost:5000/projects\";\n      // Express uses port 3001 (react uses 3000)\n      let url = \"http://localhost:3001/tasks\";\n      axios.get(url).then(response => this.setState({\n        tasks: response.data\n      }));\n    };\n\n    this.addTask = () => {\n      let url = \"http://localhost:3001/tasks\";\n      axios.post(url, {\n        name: this.taskName.current.value\n      }).then(response => {\n        // refresh the data\n        this.getData(); // empty the input\n\n        this.taskName.current.value = \"\";\n      });\n    };\n\n    this.updateTask = () => {//code that will make a call to the backend to update tasks\n    };\n\n    this.state = {\n      tasks: []\n    };\n    this.taskName = React.createRef();\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"List of tasks (React)\"), React.createElement(\"input\", {\n      ref: this.taskName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.addTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"add\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.state.tasks.map(p => React.createElement(\"li\", {\n      key: p.taskid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, p.name, \" : \", p.complete ? \"complete\" : \"not complete\", \" \", React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Complete\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Delete\")))));\n  }\n\n}\n\nexport default Task;","map":{"version":3,"sources":["C:\\Users\\lachl\\Desktop\\Group Project\\team-compiling-crusaders\\client-react\\src\\components\\Task.js"],"names":["React","axios","Task","Component","constructor","props","getData","url","get","then","response","setState","tasks","data","addTask","post","name","taskName","current","value","updateTask","state","createRef","componentDidMount","render","map","p","taskid","complete"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;;AACA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,OAVmB,GAUT,MAAM;AACd;AACA;AAEA;AACA;AAEA;AACA,UAAIC,GAAG,GAAG,6BAAV;AACAN,MAAAA,KAAK,CAACO,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEF,QAAQ,CAACG;AAAlB,OAAd,CAAhC;AACD,KApBkB;;AAAA,SAsBnBC,OAtBmB,GAsBT,MAAM;AACd,UAAIP,GAAG,GAAG,6BAAV;AACAN,MAAAA,KAAK,CAACc,IAAN,CAAWR,GAAX,EAAgB;AAAES,QAAAA,IAAI,EAAE,KAAKC,QAAL,CAAcC,OAAd,CAAsBC;AAA9B,OAAhB,EAAuDV,IAAvD,CAA4DC,QAAQ,IAAI;AACtE;AACA,aAAKJ,OAAL,GAFsE,CAGtE;;AACA,aAAKW,QAAL,CAAcC,OAAd,CAAsBC,KAAtB,GAA8B,EAA9B;AACD,OALD;AAMD,KA9BkB;;AAAA,SAgCnBC,UAhCmB,GAgCN,MAAM,CACjB;AACD,KAlCkB;;AAEjB,SAAKC,KAAL,GAAa;AAAET,MAAAA,KAAK,EAAE;AAAT,KAAb;AACA,SAAKK,QAAL,GAAgBjB,KAAK,CAACsB,SAAN,EAAhB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKjB,OAAL;AACD;;AA6BDkB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AAAO,MAAA,GAAG,EAAE,KAAKP,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAkD,MAAA,OAAO,EAAE,KAAKH,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKO,KAAL,CAAWT,KAAX,CAAiBa,GAAjB,CAAqBC,CAAC,IACrB;AAAI,MAAA,GAAG,EAAEA,CAAC,CAACC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,CAAC,CAACV,IADL,SACeU,CAAC,CAACE,QAAF,GAAa,UAAb,GAA0B,cADzC,OAC0D;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAD1D,EAC6H;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD7H,CADD,CADH,CAJF,CADF;AAcD;;AArDgC;;AAwDnC,eAAe1B,IAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport '../task.min.css'\r\nclass Task extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { tasks: [] };\r\n    this.taskName = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  getData = () => {\r\n    // Java Spring Boot uses port 8080\r\n    //let url = \"http://localhost:8080/tasks\";\r\n\r\n    // C# dotnetcore uses port 5000\r\n    //let url = \"http://localhost:5000/projects\";\r\n\r\n    // Express uses port 3001 (react uses 3000)\r\n    let url = \"http://localhost:3001/tasks\";\r\n    axios.get(url).then(response => this.setState({ tasks: response.data }));\r\n  };\r\n\r\n  addTask = () => {\r\n    let url = \"http://localhost:3001/tasks\";\r\n    axios.post(url, { name: this.taskName.current.value }).then(response => {\r\n      // refresh the data\r\n      this.getData();\r\n      // empty the input\r\n      this.taskName.current.value = \"\";\r\n    });\r\n  };\r\n\r\n  updateTask = () => {\r\n    //code that will make a call to the backend to update tasks\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>List of tasks (React)</h3>\r\n        <input ref={this.taskName} />\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={this.addTask}>add</button>\r\n        <ul>\r\n          {this.state.tasks.map(p => (\r\n            <li key={p.taskid}>\r\n              {p.name} : { p.complete ? \"complete\" : \"not complete\" } <button type=\"button\" className=\"btn btn-success\">Complete</button><button type=\"button\" className=\"btn btn-danger\">Delete</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Task;\r\n"]},"metadata":{},"sourceType":"module"}