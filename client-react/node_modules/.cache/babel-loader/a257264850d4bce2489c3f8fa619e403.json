{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repositories\\\\lachlan-sharp-final-project\\\\client-react\\\\src\\\\components\\\\CreateBlogPost.js\";\nimport React, { Component } from 'react';\nimport '../stylesheets/BlogpostForm.css';\nimport { Form, Button } from 'react-bootstrap';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nlet blogName = '';\nlet blogContent = '';\nlet academic = 0;\nlet lifestyle = 0;\nlet professional = 0;\nlet opinion = 0;\nlet entertainment = 0;\n\nclass CreateBlogPost extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.blogpostCreate = () => {\n      var encodedURI = window.encodeURI(this.props.uri);\n      console.log('Starting Blogpost Create');\n      return axios.post(encodedURI, {\n        blogName: blogName,\n        blogContent: blogContent,\n        academic: parseInt(academic),\n        lifestyle: parseInt(lifestyle),\n        professional: parseInt(professional),\n        opinion: parseInt(opinion),\n        entertainment: parseInt(entertainment),\n        iduser: parseInt(this.props.user.iduser)\n      }).then(console.log('Completed Blogpost Create'));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Blogpost-Form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Form, {\n      className: \"Form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      className: \"Blog-Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      size: \"lg\",\n      placeholder: \"Title...\",\n      name: \"blogName\",\n      onChange: event => blogName = event.target.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      className: \"Checkboxes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      inline: true,\n      label: \"Academic\",\n      name: \"academic\",\n      type: \"checkbox\",\n      onClick: () => {\n        if (academic === 0) {\n          academic = 1;\n          console.log('Academic:', academic);\n        } else {\n          academic = 0;\n          console.log('Academic:', academic);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Form.Check, {\n      inline: true,\n      label: \"Lifestyle\",\n      name: \"lifestyle\",\n      type: \"checkbox\",\n      onClick: () => {\n        if (lifestyle === 0) {\n          lifestyle = 1;\n          console.log('Lifestyle:', lifestyle);\n        } else {\n          lifestyle = 0;\n          console.log('Lifestyle:', lifestyle);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Form.Check, {\n      inline: true,\n      label: \"Professional\",\n      name: \"professional\",\n      type: \"checkbox\",\n      onClick: () => {\n        if (professional === 0) {\n          professional = 1;\n          console.log('Professional:', professional);\n        } else {\n          professional = 0;\n          console.log('Professional:', professional);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Form.Check, {\n      inline: true,\n      label: \"Opinion\",\n      name: \"opinion\",\n      type: \"checkbox\",\n      onClick: () => {\n        if (opinion === 0) {\n          opinion = 1;\n          console.log('Opinion:', opinion);\n        } else {\n          opinion = 0;\n          console.log('Opinion:', opinion);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Form.Check, {\n      inline: true,\n      label: \"Entertainment\",\n      name: \"entertainment\",\n      type: \"checkbox\",\n      onClick: () => {\n        if (entertainment === 0) {\n          entertainment = 1;\n          console.log('Entertainment:', entertainment);\n        } else {\n          entertainment = 0;\n          console.log('Entertainment:', entertainment);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      className: \"Blog-Text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"textarea\",\n      size: \"lg\",\n      placeholder: \"5000 characters... \",\n      name: \"blogContent\",\n      onChange: event => blogContent = event.target.value,\n      rows: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"button\",\n      variant: \"info\",\n      size: \"lg\",\n      onClick: this.blogpostCreate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Create Post\")), React.createElement(\"div\", {\n      className: \"Profile-Link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      onClick: () => {\n        this.props.blogpost();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Back to Profile\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    blogpost: state.blogpost,\n    user: state.user\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    blogpost: () => dispatch({\n      type: 'BLOG_POST'\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateBlogPost);","map":{"version":3,"sources":["D:\\Repositories\\lachlan-sharp-final-project\\client-react\\src\\components\\CreateBlogPost.js"],"names":["React","Component","Form","Button","BrowserRouter","Router","Link","connect","axios","blogName","blogContent","academic","lifestyle","professional","opinion","entertainment","CreateBlogPost","blogpostCreate","encodedURI","window","encodeURI","props","uri","console","log","post","parseInt","iduser","user","then","render","event","target","value","blogpost","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport '../stylesheets/BlogpostForm.css';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nlet blogName = '';\r\nlet blogContent = '';\r\nlet academic = 0;\r\nlet lifestyle = 0;\r\nlet professional = 0;\r\nlet opinion = 0;\r\nlet entertainment = 0;\r\n\r\nclass CreateBlogPost extends Component {\r\n\r\n    blogpostCreate = () => {\r\n        var encodedURI = window.encodeURI(this.props.uri);\r\n        console.log('Starting Blogpost Create')\r\n        return axios.post(encodedURI, {\r\n            blogName: blogName,\r\n            blogContent: blogContent,\r\n            academic: parseInt(academic),\r\n            lifestyle: parseInt(lifestyle),\r\n            professional: parseInt(professional),\r\n            opinion: parseInt(opinion),\r\n            entertainment: parseInt(entertainment),\r\n            iduser: parseInt(this.props.user.iduser)\r\n        })\r\n        .then(console.log('Completed Blogpost Create'))\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='Blogpost-Form'>\r\n                <Form className=\"Form\">\r\n                    <Form.Group className=\"Blog-Title\">\r\n                        <Form.Control \r\n                            type='text'\r\n                            size='lg'\r\n                            placeholder='Title...'\r\n                            name='blogName'\r\n                            onChange={event => blogName = event.target.value} />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"Checkboxes\">\r\n                        <Form.Check inline label=\"Academic\" \r\n                                           name=\"academic\" \r\n                                           type='checkbox'\r\n                                           onClick={() => { if(academic === 0) {\r\n                                               academic = 1;\r\n                                               console.log('Academic:', academic);\r\n                                           } else {\r\n                                               academic = 0;\r\n                                               console.log('Academic:', academic);\r\n                                           }}} />\r\n                        <Form.Check inline label=\"Lifestyle\" \r\n                                           name=\"lifestyle\" \r\n                                           type='checkbox'\r\n                                           onClick={() => { if(lifestyle === 0) {\r\n                                            lifestyle = 1;\r\n                                            console.log('Lifestyle:', lifestyle);\r\n                                        } else {\r\n                                            lifestyle = 0;\r\n                                            console.log('Lifestyle:', lifestyle);\r\n                                        }}} />\r\n                        <Form.Check inline label=\"Professional\" \r\n                                           name=\"professional\" \r\n                                           type='checkbox'\r\n                                           onClick={() => { if(professional === 0) {\r\n                                            professional = 1;\r\n                                            console.log('Professional:', professional);\r\n                                        } else {\r\n                                            professional = 0;\r\n                                            console.log('Professional:', professional);\r\n                                        }}} />\r\n                        <Form.Check inline label=\"Opinion\" \r\n                                           name=\"opinion\" \r\n                                           type='checkbox'\r\n                                           onClick={() => { if(opinion === 0) {\r\n                                            opinion = 1;\r\n                                            console.log('Opinion:', opinion);\r\n                                        } else {\r\n                                            opinion = 0;\r\n                                            console.log('Opinion:', opinion);\r\n                                        }}} />\r\n                        <Form.Check inline label=\"Entertainment\" \r\n                                           name=\"entertainment\" \r\n                                           type='checkbox'\r\n                                           onClick={() => { if(entertainment === 0) {\r\n                                            entertainment = 1;\r\n                                            console.log('Entertainment:', entertainment);\r\n                                        } else {\r\n                                            entertainment = 0;\r\n                                            console.log('Entertainment:', entertainment);\r\n                                        }}} />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"Blog-Text\">\r\n                        <Form.Control as='textarea'\r\n                                      size='lg'\r\n                                      placeholder='5000 characters... '\r\n                                      name='blogContent'\r\n                                      onChange={event => blogContent = event.target.value} \r\n                                      rows={6}/>\r\n                    </Form.Group>\r\n                    <Button type='button' variant='info' size='lg' onClick={this.blogpostCreate()}>Create Post</Button>\r\n                </Form>\r\n                <div className='Profile-Link'>\r\n                    <Router>\r\n                        <Link to='/'\r\n                            onClick={() => {\r\n                                this.props.blogpost();\r\n\r\n                            }}>Back to Profile</Link>\r\n                    </Router>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        blogpost: state.blogpost,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        blogpost: () => dispatch({ type: 'BLOG_POST' })\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateBlogPost);"]},"metadata":{},"sourceType":"module"}